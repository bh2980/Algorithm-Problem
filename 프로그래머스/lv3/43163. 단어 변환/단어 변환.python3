from collections import deque

def calcDistance(x, y):
    count = 0
    
    for i in range(len(x)):
        if x[i] != y[i]:
            count += 1
            
    return count

def solution(begin, target, words):
    #BFS
    
    visited = [False for _ in range(len(words))] #방문 체크 배열
    queue = deque([begin]) #word를 넣는 queue
    len_queue = len(queue)
    count = 0
    find = False
    
    while queue: #stack이 비었으면 return 0
        word = queue.popleft()
        len_queue -= 1

        if word == target:
            find = True
            break
        
        for index in range(len(words)):
            if not visited[index]:
                if calcDistance(word, words[index]) == 1:
                    visited[index] = True
                    queue.append(words[index])
        
        if len_queue == 0:
            count += 1
            len_queue = len(queue)
                
    return count if find else 0